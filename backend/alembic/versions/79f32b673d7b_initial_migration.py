"""Initial migration

Revision ID: 79f32b673d7b
Revises: 
Create Date: 2024-12-29 11:09:08.871613

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "79f32b673d7b"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "book_categories",
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["book_categories.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_book_categories_id"), "book_categories", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_book_categories_name"), "book_categories", ["name"], unique=True
    )
    op.create_table(
        "books",
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("isbn", sa.String(), nullable=True),
        sa.Column("author", sa.String(), nullable=True),
        sa.Column("publisher", sa.String(), nullable=True),
        sa.Column("category", sa.String(), nullable=True),
        sa.Column("edition", sa.String(), nullable=True),
        sa.Column("publication_year", sa.Integer(), nullable=True),
        sa.Column("copies", sa.Integer(), nullable=True),
        sa.Column("available_copies", sa.Integer(), nullable=True),
        sa.Column("price", sa.Float(), nullable=True),
        sa.Column("location", sa.String(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("cover_image", sa.String(), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "AVAILABLE",
                "ISSUED",
                "LOST",
                "DAMAGED",
                "UNDER_REPAIR",
                name="bookstatus",
            ),
            nullable=True,
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_books_id"), "books", ["id"], unique=False)
    op.create_index(op.f("ix_books_isbn"), "books", ["isbn"], unique=True)
    op.create_index(op.f("ix_books_title"), "books", ["title"], unique=False)
    op.create_table(
        "users",
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("username", sa.String(), nullable=True),
        sa.Column("hashed_password", sa.String(), nullable=True),
        sa.Column("first_name", sa.String(), nullable=True),
        sa.Column("last_name", sa.String(), nullable=True),
        sa.Column(
            "role",
            sa.Enum(
                "ADMIN",
                "TEACHER",
                "STUDENT",
                "PARENT",
                "LIBRARIAN",
                "ACCOUNTANT",
                name="userrole",
            ),
            nullable=True,
        ),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("is_verified", sa.Boolean(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=True)
    op.create_table(
        "library_members",
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("membership_type", sa.String(), nullable=True),
        sa.Column("card_number", sa.String(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("max_books", sa.Integer(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_index(
        op.f("ix_library_members_card_number"),
        "library_members",
        ["card_number"],
        unique=True,
    )
    op.create_index(
        op.f("ix_library_members_id"), "library_members", ["id"], unique=False
    )
    op.create_table(
        "students",
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("admission_number", sa.String(), nullable=True),
        sa.Column("roll_number", sa.String(), nullable=True),
        sa.Column("class_name", sa.String(), nullable=True),
        sa.Column("section", sa.String(), nullable=True),
        sa.Column("date_of_birth", sa.Date(), nullable=True),
        sa.Column(
            "gender", sa.Enum("MALE", "FEMALE", "OTHER", name="gender"), nullable=True
        ),
        sa.Column(
            "blood_group",
            sa.Enum(
                "A_POSITIVE",
                "A_NEGATIVE",
                "B_POSITIVE",
                "B_NEGATIVE",
                "O_POSITIVE",
                "O_NEGATIVE",
                "AB_POSITIVE",
                "AB_NEGATIVE",
                name="bloodgroup",
            ),
            nullable=True,
        ),
        sa.Column("address", sa.String(), nullable=True),
        sa.Column("phone", sa.String(), nullable=True),
        sa.Column("parent_name", sa.String(), nullable=True),
        sa.Column("parent_phone", sa.String(), nullable=True),
        sa.Column("parent_email", sa.String(), nullable=True),
        sa.Column("emergency_contact", sa.String(), nullable=True),
        sa.Column("medical_conditions", sa.String(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_index(
        op.f("ix_students_admission_number"),
        "students",
        ["admission_number"],
        unique=True,
    )
    op.create_index(op.f("ix_students_id"), "students", ["id"], unique=False)
    op.create_table(
        "book_circulations",
        sa.Column("book_id", sa.Integer(), nullable=True),
        sa.Column("member_id", sa.Integer(), nullable=True),
        sa.Column("issue_date", sa.Date(), nullable=True),
        sa.Column("due_date", sa.Date(), nullable=True),
        sa.Column("return_date", sa.Date(), nullable=True),
        sa.Column("fine_amount", sa.Float(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("ISSUED", "RETURNED", "OVERDUE", "LOST", name="circulationstatus"),
            nullable=True,
        ),
        sa.Column("remarks", sa.String(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["book_id"],
            ["books.id"],
        ),
        sa.ForeignKeyConstraint(
            ["member_id"],
            ["library_members.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_book_circulations_id"), "book_circulations", ["id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_book_circulations_id"), table_name="book_circulations")
    op.drop_table("book_circulations")
    op.drop_index(op.f("ix_students_id"), table_name="students")
    op.drop_index(op.f("ix_students_admission_number"), table_name="students")
    op.drop_table("students")
    op.drop_index(op.f("ix_library_members_id"), table_name="library_members")
    op.drop_index(op.f("ix_library_members_card_number"), table_name="library_members")
    op.drop_table("library_members")
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_books_title"), table_name="books")
    op.drop_index(op.f("ix_books_isbn"), table_name="books")
    op.drop_index(op.f("ix_books_id"), table_name="books")
    op.drop_table("books")
    op.drop_index(op.f("ix_book_categories_name"), table_name="book_categories")
    op.drop_index(op.f("ix_book_categories_id"), table_name="book_categories")
    op.drop_table("book_categories")
    # ### end Alembic commands ###
